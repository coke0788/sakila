<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.FilmMapper">
	<insert id="insertFilm" parameterType="com.gd.sakila.vo.Film">
	 	<selectKey resultType="Integer" keyProperty="filmId" order="AFTER">
	 		SELECT LAST_INSERT_ID()
	 	</selectKey>
	 	<if test="originalLanguageId!=0">
		 	INSERT INTO film(title, description, release_year, language_id, 
		 	original_language_id, rental_duration, rental_rate, length, 
		 	replacement_cost, rating, special_features) 
		 	VALUES (#{title}, #{description}, #{releaseYear}, #{languageId}, #{originalLanguageId}, #{rentalDuration},
		 	#{rentalRate}, #{length}, #{replacementCost}, #{rating}, #{specialFeatures})
	 	</if>
	 	<if test="originalLanguageId==0">
	 		INSERT INTO film(title, description, release_year, language_id, rental_duration, rental_rate, length, 
		 	replacement_cost, rating, special_features) 
		 	VALUES (#{title}, #{description}, #{releaseYear}, #{languageId}, #{rentalDuration},
		 	#{rentalRate}, #{length}, #{replacementCost}, #{rating}, #{specialFeatures})
	 	</if>
	</insert>
	
	<insert id="insertFilmCategory" parameterType="java.util.Map">
		INSERT INTO film_category(film_id, category_id) VALUES (#{filmId}, #{categoryId})
	</insert>
	
	<select id="selectFilmListByFilmId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT FID, title, category, price, rating, length FROM film_list
		<where>
			<if test="searchWord!=null">
				AND title LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="categoryName!=null">
				AND category=#{categoryName}
			</if>
			<if test="price!=null">
				AND price=#{price}
			</if>
			<if test="rating!=null">
				AND rating=#{rating}
			</if>
			<if test="searchWordForActor!=null">
				AND actors LIKE CONCAT('%', #{searchWordForActor}, '%')
			</if>
		</where>
			<if test='orderWord.equals("FID")'>
				ORDER BY FID LIMIT #{beginRow}, #{rowPerPage}
			</if>
			<if test='orderWord.equals("title")'>
				ORDER BY title LIMIT #{beginRow}, #{rowPerPage}
			</if>
			<if test='orderWord.equals("price")'>
				ORDER BY price LIMIT #{beginRow}, #{rowPerPage}
			</if>
			<if test='orderWord.equals("rating")'>
				ORDER BY rating DESC LIMIT #{beginRow}, #{rowPerPage}
			</if>
			<if test='orderWord.equals("category")'>
				ORDER BY category LIMIT #{beginRow}, #{rowPerPage}
			</if>	
	</select>
	
	<select id="selectFilmTotal" parameterType="java.util.Map" resultType="Integer">
		SELECT COUNT(*) FROM film_list
		<where>
			<if test="searchWord!=null">
				AND title LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="categoryName!=null">
				AND category=#{categoryName}
			</if>
			<if test="price!=null">
				AND price=#{price}
			</if>
			<if test="rating!=null">
				AND rating=#{rating}
			</if>
			<if test="searchWordForActor!=null">
				AND actors LIKE CONCAT('%', #{searchWordForActor}, '%')
			</if>
		</where>
	</select>
	
	<!-- db의 프로시저 호출하는 문법 -->
	<!-- Map 안에 filmId(in), storeId(in), filmCount(out) 들어있음. -->
	<select id="selectFilmInStock" parameterType="java.util.Map" resultType="Integer" statementType="CALLABLE">
		{call film_in_stock(#{filmId}, #{storeId}, #{filmCount, mode=OUT, jdbcType=DECIMAL, javaType=Integer})}
	</select>
	
	<select id="selectFilmOne" parameterType="int" resultType="java.util.Map">
		SELECT f.film_id filmId, fl.title title, fl.description description, YEAR(f.release_year) releaseYear, f.rental_duration rentalDuration, 
		fl.actors actors, fl.category category, fl.price rentalRate, fl.length length, fl.rating rating, f.special_features specialFeatures, 
		f.last_update lastUpdate, f.replacement_cost replacementCost, l.name language FROM film f left JOIN film_list fl ON(fl.FID=f.film_id) 
		JOIN language l ON (f.language_id=l.language_id) WHERE f.film_id=#{filmId}
	</select>
	
	<select id="selectRatingList" resultType="String">
		SELECT rating FROM film GROUP BY rating
	</select>
	
	<!-- 영화에 출연한 배우들 목록을 출력 시킬것임. 근데 검색 기능도 넣고 싶어서 쿼리 추가함.-->
	<select id="selectActorForFilm" parameterType="Integer" resultType="java.util.Map">
		SELECT a.actor_id actorId, CONCAT(a.first_name,' ',a.last_name) name, film_id filmId
		FROM actor a 
		LEFT JOIN (SELECT * FROM film_actor WHERE film_id=#{filmId}) t 
		ON a.actor_id=t.actor_id 
		<where>
			<if test="searchWord != null">
				a.first_name LIKE CONCAT('%', #{searchWord}, '%') OR a.last_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
		</where>
		ORDER BY name
	</select>
	<insert id="insertActorForFilm" parameterType="java.util.Map">
		INSERT INTO film_actor(actor_id, film_id) VALUES (#{actorId}, #{filmId})
	</insert>
</mapper>