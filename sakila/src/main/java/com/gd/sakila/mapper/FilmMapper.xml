<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.FilmMapper">
	
	<!-- 
		1. 기존 코드에 select 쿼리 두개를 합쳐야함.
		2. page vo에 orderWord 추가했는데 이거 안된다고 하니까 수정해야함....
	 -->
	 
	<select id="selectFilmListByFilmId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT FID, title, category, price, rating, length FROM film_list
		<where>
			<if test="searchWord!=null">
				AND title LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="categoryName!=null">
				AND category=#{categoryName}
			</if>
			<if test="price!=null">
				AND price=#{price}
			</if>
			<if test="rating!=null">
				AND rating=#{rating}
			</if>
			<if test="searchWordForActor!=null">
				AND actors LIKE CONCAT('%', #{searchWordForActor}, '%')
			</if>
		</where>
			<if test='orderWord.equals("FID")'>
				ORDER BY FID LIMIT #{beginRow}, #{rowPerPage}
			</if>
			<if test='orderWord.equals("title")'>
				ORDER BY title LIMIT #{beginRow}, #{rowPerPage}
			</if>
			<if test='orderWord.equals("price")'>
				ORDER BY price LIMIT #{beginRow}, #{rowPerPage}
			</if>
			<if test='orderWord.equals("rating")'>
				ORDER BY rating DESC LIMIT #{beginRow}, #{rowPerPage}
			</if>
			<if test='orderWord.equals("category")'>
				ORDER BY category LIMIT #{beginRow}, #{rowPerPage}
			</if>	
	</select>
	
	<select id="selectFilmTotal" parameterType="java.util.Map" resultType="Integer">
		SELECT COUNT(*) FROM film_list
		<where>
			<if test="searchWord!=null">
				AND title LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="categoryName!=null">
				AND category=#{categoryName}
			</if>
						<if test="price!=null">
				AND price=#{price}
			</if>
			<if test="rating!=null">
				AND rating=#{rating}
			</if>
			<if test="searchWordForActor!=null">
				AND actors LIKE CONCAT('%', #{searchWordForActor}, '%')
			</if>
		</where>
	</select>
	
	<!-- db의 프로시저 호출하는 문법 -->
	<!-- Map 안에 filmId(in), storeId(in), filmCount(out) 들어있음. -->
	<select id="selectFilmInStock" parameterType="java.util.Map" resultType="Integer" statementType="CALLABLE">
		{call film_in_stock(#{filmId}, #{storeId}, #{filmCount, mode=OUT, jdbcType=DECIMAL, javaType=Integer})}
	</select>
	
	<select id="selectFilmOne" parameterType="int" resultType="java.util.Map">
		SELECT f.film_id filmId, fl.title title, fl.description description, f.release_year releaseYear, f.rental_duration rentalDuration, fl.actors actors, fl.category category, fl.price rentalRate, fl.length length, fl.rating rating, f.special_features specialFeatures, f.last_update lastUpdate, f.replacement_cost replacementCost, l.name language FROM film f left JOIN film_list fl ON(fl.FID=f.film_id) JOIN language l ON (f.language_id=l.language_id) WHERE f.film_id=#{filmId}
	</select>
	
	<select id="selectRatingList" resultType="String">
		SELECT rating FROM film GROUP BY rating
	</select>
</mapper>